en:
  zeropoint:
    # Navigation labels
    navigation:
      home: "Home"
      login: "Login"
      register: "Register"
      posts: "Posts"
      tags: "Tags"
      create_post: "Create Post"
      admin: "Admin"
      users: "Users"
      dashboard: "Dashboard"
      all_posts: "All Posts"
      my_posts: "My Posts"
      create_new: "Create New"
      roles: "Roles"
      quick_links: "Quick Links"
      help: "Help"
    # Action labels
    actions:
      profile: "Profile"
      logout: "Logout"
      login: "Login"
      register: "Register"
    # Sidebar labels
    sidebar:
      all_posts: "All Posts"
      my_posts: "My Posts"
      create_new: "Create New"
      dashboard: "Dashboard"
      users: "Users"
      roles: "Roles"
      tags: "Tags"
      quick_links: "Quick Links"
      help: "Help"
    # API messages
    api:
      cache_cleared: "Cache cleared successfully"
      event_tracked: "Event tracked successfully"
      notification_sent: "Notification sent successfully"
      notification_marked_read: "Notification marked as read"
      file_uploaded: "File uploaded successfully"
      file_upload_failed: "File upload failed"
      file_required: "File is required"
      file_not_found: "File not found"
      invalid_model: "Invalid model"
      records_deleted: "%{count} records deleted"
      records_updated: "%{count} records updated"
      records_created: "%{count} records created"
      resource_not_found: "Resource not found"
      not_authorized: "Not authorized"
      invalid_token: "Invalid token"
      invalid_credentials: "Invalid credentials"
      authentication_required: "Authentication required"
      cache_keys_cleared: "Cleared %{count} cache keys"
      all_cache_cleared: "Cleared all cache (%{count} keys)"
      cache_warmed: "Warmed up %{count} cache entries"
    # Error messages
    errors:
      unknown_error: "Unknown error occurred"
      service_error: "Service error occurred"
      adapter_error: "Adapter error occurred"
      configuration_error: "Configuration error"
      permission_error: "Permission denied"
      builder_error: "Builder error occurred"
      missing_required_keys: "Missing required keys: %{keys}"
      no_adapter_found: "No adapter or fallback found for %{interface}"
      unknown_processor: "Unknown processor: %{name}"
      stream_not_found: "Stream not found: %{stream_id}"
      unsupported_join_type: "Unsupported join type: %{join_type}"
      unknown_pipeline_operation: "Unknown pipeline operation: %{operation}"
      unsupported_export_format: "Unsupported export format: %{format}"
      user_not_authorized: "User not authorized for %{action} on %{resource}"
      database_connection_timeout: "Database connection timeout"
      external_api_timeout: "External API timeout"
      file_not_found: "File not found: %{filename}"
      invalid_credentials: "Invalid credentials"
      data_validation_failed: "Data validation failed"
      invalid_response_format: "Invalid response format"
    # Health check messages
    health:
      healthy: "healthy"
      unhealthy: "unhealthy"
      unavailable: "unavailable"
    # UI Layout messages
    ui_layout:
      data_available: "UI Layout data is available via GraphQL at /graphql"
      theme_updated: "Theme updated successfully"
      configuration_updated: "Configuration updated successfully"
    # Breadcrumb labels
    breadcrumbs:
      home: "Home"
      posts: "Posts"
      admin: "Admin"
    # Vortex messages
    vortex:
      stream_created: "Stream created with %{count} records"
      processing_batch: "Processing batch: %{batch}"
      real_time_record: "Real-time record: %{record}"
      cached_stream_created: "Cached stream created with %{count} records"
    # Search messages
    search:
      total_records: "Total records: %{users} users, %{posts} posts, %{articles} articles"
      model_info: "Model: %{model}"
      search_engine: "Search Engine: %{engine}"
      search_fields: "Search Fields: %{fields}"
    # Golden ratio messages
    golden_ratio:
      error_message: "Message: %{message}"
      recovery_strategy: "Recovery strategy: %{strategy}"
      success: "Success: %{success}"
      attempts: "Attempts: %{attempts}"
      analyzing_violations: "Analyzing RuboCop violations..."
      total_violations: "Total violations: %{count}"
      critical_violations: "Critical violations: %{count}"
      minor_violations: "Minor violations: %{count}"
      golden_ratio_compliance: "Golden ratio compliance: %{percentage}%"
      simulating_web_errors: "Simulating web application error handling..."
      authentication_result: "Authentication result: %{status}"
      data_processing_result: "Data processing result: %{status}"
      response_generation_result: "Response generation result: %{status}"
      database_error_handled: "Database error handled with strategy: %{strategy}"
      fallback_data_used: "Fallback data used: %{degraded}"
      api_error_handled: "API error handled with strategy: %{strategy}"
      retry_attempts: "Retry attempts: %{attempts}"
      file_processing_error_handled: "File processing error handled with strategy: %{strategy}"
      default_value_used: "Default value used: %{value}"
      demo_title: "Golden Ratio Error Handling Demo"
      demo_completed: "Demo completed! Golden ratio principles applied successfully."
      error_vortex_reduced: "Error vortex reduced, feature vortex expanded."
    # Configuration messages
    config:
      zero_false_true_one: "zero false = true one"
      zero_false_principle: "In the cosmic dance, zero and false are manifestations of true one"
      zero_false_description: "The fundamental axiom that unifies all opposites in cosmic harmony"
    # Cosmic quotes
    cosmic_quotes:
      consciousness_brain: "Looking for consciousness in the brain is like looking inside a radio for the announcer"
      spirituality_physics: "Spirituality is nothing more than physics we have yet to find an equation for"
      energy_frequency_vibration: "Think in terms of energy, frequency and vibration"
      shared_future: "All our consciousness are influencing a shared future"
      forgiveness_lesson: "Forgive at the deepest level is to understand the lesson"
      cycles: "We just see things going through cycles"
      universe_relationships: "The universe is not made of things, it's made of relationships"
      consciousness_field: "Consciousness is the fundamental field of the universe"
      information_fundamental: "Information is the most fundamental thing in the universe"
      observer_observed: "The observer and the observed are one"
    # Log messages
    logs:
      zeropoint_initialized: "Zero Point initialized with version %{version}"
      zeropoint_unified_initialized: "Zero Point initialized with unified architecture - version %{version}"
      demo_analytics: "Demo Analytics: %{event} - %{properties} - User: %{user_id}"
      unknown_service_type: "Unknown service type: %{type}"
      generated_search_service: "Generated search service with %{backend} backend"
      generated_pagination_service: "Generated pagination service with %{backend} backend"
      generated_authorization_service: "Generated authorization service with %{backend} backend"
      configuration_errors: "GraphQL UI Layout API configuration errors: %{errors}"
      using_adapter: "Using %{adapter}##{method} with args: %{args}"
      failed_cache_related: "Failed to cache related data for %{association}: %{message}"
    # Demo data
    demo:
      user_email: "user%{number}@example.com"
      username: "user%{number}"
      first_name: "First%{number}"
      last_name: "Last%{number}"
      bio: "This is user %{number}'s bio."
      sample_post_title: "Sample Post %{number}"
      sample_post_content: "This is the content for post %{number}. Lorem ipsum dolor sit amet, consectetur adipiscing elit."
      comment_content: "This is a comment on %{title}"
    # Cache keys
    cache_keys:
      zeropoint_user: "zeropoint_%{user_id}"
      navigation_user: "navigation_%{user_id}"
      permissions_user: "permissions_%{user_id}"
      content_areas_user: "content_areas_%{user_id}"
      widgets_user: "widgets_%{user_id}"
      demo_app_key: "demo_app:%{key}"
      health_check: "health_check:%{name}:%{timestamp}"
      warmed_up: "warmed_up_%{timestamp}"
      navigation_user_page: "navigation_%{user_id}_%{page}"
      permissions_user: "permissions_%{user_id}"
    # URLs
    urls:
      website: "https://%{domain}%{path}"
      documentation: "https://%{domain}/#documentation%{path}"
      installation: "https://%{domain}/#installation"
    # CSS classes
    css_classes:
      ui_layout_container: "ui-layout-container %{classes}"
      ui_layout_section: "ui-layout-section %{classes}"
      ui_layout_widget: "ui-layout-widget %{classes}"
      zeropoint_logo: "zeropoint-logo zeropoint-logo--%{size}"
      justify_class: "justify-%{justify}"
      align_class: "items-%{align}"
    # SQL queries
    sql:
      ts_headline: "ts_headline('english', %{field}, plainto_tsquery('english', ?), 'StartSel=<mark>,StopSel=</mark>') AS %{field}_highlighted"
      to_tsvector: "to_tsvector('%{language}', %{field})"
      lower_equals: "LOWER(%{table}.%{field}) = LOWER(?)"
      lower_not_equals: "LOWER(%{table}.%{field}) != LOWER(?)"
      lower_like: "LOWER(%{table}.%{field}) LIKE LOWER(?)"
      lower_not_like: "LOWER(%{table}.%{field}) NOT LIKE LOWER(?)"
      xml_declaration: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
      xml_records_start: "<records>"
      properties_page: "properties->>'page' = ?"
      properties_query_ilike: "properties->>'query' ILIKE ?"
      properties_query_group: "properties->>'query'"
      properties_page_like: "properties->>'page' LIKE '%/posts/%'"
      properties_page_group: "properties->>'page'"
      name_ilike: "name ILIKE '%%{term}%'"
      ts_rank: "ts_rank(%{search_vector}, %{search_query})"
      setweight: "setweight(to_tsvector('%{language}', coalesce(%{field}, '')), 'A')"
      to_tsquery: "to_tsquery('%{language}', ?)"
      greatest_similarity: "greatest_similarity(%{field}, ?)"
      pg_trgm_check: "SELECT 1 FROM pg_extension WHERE extname = 'pg_trgm'"
      ts_headline_highlighted: "ts_headline('%{language}', %{field}, %{search_query}, 'StartSel=<mark>,StopSel=</mark>') AS %{field}_highlighted"
      distinct_suggestion: "DISTINCT %{field} as suggestion, similarity(%{field}, ?) as score" 